{"version":3,"sources":["Tarefas.js","AddTarefa.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Tarefas","_ref","tarefas","deleteTarefa","StyledDiv","styled","div","_templateObject","listaTarefas","length","map","tarefa","react_default","a","createElement","className","onClick","e","id","key","conteudo","AddTarefa","state","handleChange","_this","setState","target","value","handleSubmit","preventDefault","props","addTarefa","onSubmit","this","type","onChange","Component","Footer","StyledFootWrapper","Footer_templateObject","href","App","getLastId","idList","Math","max","apply","Object","toConsumableArray","setClassDeleted","classList","add","filter","forEach","index","console","log","setTimeout","concat","App_templateObject","src_AddTarefa","src_Tarefas","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04f4ee37.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Tarefas = ({tarefas, deleteTarefa}) => {\r\n    const StyledDiv = styled.div`\r\n        @keyframes slideSide {\r\n            0% {\r\n                transform: translateX(0);\r\n            \r\n            }\r\n            100% {\r\n                transform: translateX(1500px);\r\n            }\r\n        }\r\n\r\n         @keyframes slideUp {\r\n            0% {\r\n                transform: translateY(0);\r\n            \r\n            }\r\n            100% {\r\n                transform: translateY(-50px);\r\n            }\r\n        }\r\n\r\n        margin-bottom: 50px;\r\n    \r\n        > div {\r\n            transition: .5s all;\r\n            border: 1px solid #8bc34a;   \r\n            &:hover {\r\n                transform: scaleX(1.5);\r\n                transform: translateX(20px);\r\n                background-color: orange;\r\n                \r\n                .excluir {\r\n                    display: block;\r\n                    filter: grayscale();\r\n                    right: 20px;\r\n                }\r\n            }\r\n            \r\n            &.deleted {\r\n                color: #fff;\r\n                background-color: red;\r\n                animation-name: slideSide;\r\n                animation-duration: 1s;\r\n\r\n                & ~ div:not(.delete) {\r\n                    animation-name: slideUp;\r\n                    animation-duration: 1s;\r\n                }\r\n            }\r\n\r\n            &:last-of-type {\r\n                border-bottom: 2px solid #8bc34a !important;\r\n            }\r\n\r\n            span{\r\n                &.conteudo {\r\n                    font-weight: bold;\r\n                }\r\n\r\n                &.excluir {\r\n                    display: none;\r\n                    color: white;\r\n                    font-size: 20px;\r\n                    box-shadow: 2px 2px 15px lightgray;\r\n                    position: absolute;\r\n                    right: -100px;\r\n                    top: 10px;\r\n                    transition: .5s all;\r\n                }\r\n            }                      \r\n        }\r\n    `\r\n\r\n    const listaTarefas = tarefas.length ? (\r\n        tarefas.map( tarefa => {\r\n            return (\r\n                \r\n                <div className={\"collection-item\"} onClick={(e) => deleteTarefa(e, tarefa.id)} key={tarefa.id}>\r\n                    <span className=\"conteudo\" >{tarefa.conteudo}</span>\r\n                    <span className=\"excluir\">EXCLUIR?</span>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (\r\n        <p className=\"center\">Não há tarefas ainda.</p>\r\n    )\r\n\r\n\r\n    return (\r\n        <StyledDiv className=\"tarefas collection\" >\r\n            {listaTarefas}\r\n        </StyledDiv>\r\n    )\r\n}\r\n\r\nexport default Tarefas","import React, { Component } from 'react'\r\n\r\nclass AddTarefa extends Component {\r\n    state = {\r\n        conteudo: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({conteudo: e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(this.state.conteudo) \r\n            this.props.addTarefa(this.state)\r\n        this.setState({conteudo: \"\"})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Escreva abaixo uma tarefa e digite enter para adicionar:</label>\r\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.conteudo}/>   \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTarefa","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Footer = () => {\r\n    const StyledFootWrapper = styled.div`\r\n      margin-top: 40%;\r\n      > footer {\r\n        background: green;\r\n      }\r\n      \r\n    `\r\n\r\n    return (\r\n        <StyledFootWrapper>\r\n         <div className=\"container center\">\r\n              Copyright © 2018 by <a href=\"https://github.com/paulo-raoni\">Paulo Raoni</a>\r\n         </div>\r\n        </StyledFootWrapper>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Tarefas from \"./Tarefas\";\nimport AddTarefa from './AddTarefa';\nimport Footer from  './Footer'\nimport styled from 'styled-components';\n\nclass App extends Component {\n  \n  state = {\n    tarefas: [\n      {id: 1, conteudo: \"Tarefa exemplo 1\"},\n      {id: 2, conteudo: \"Tarefa exemplo 2\"}\n    ],\n    \n  }\n\n  getLastId = () => {\n    const idList = this.state.tarefas.map(tarefa => tarefa.id)\n    return typeof idList[0] !== 'number' ? 1 : Math.max(...idList) + 1\n  }\n\n  setClassDeleted = (e) => {\n    e.target.classList.add(\"deleted\")\n  }\n\n  deleteTarefa = (e, id) => {\n    this.setClassDeleted(e)\n    const tarefas = this.state.tarefas.filter(tarefa => tarefa.id !== id)\n    tarefas.forEach((tarefa, index) => tarefa.id = index + 1)\n    console.log(tarefas)\n    setTimeout(()=>this.setState({tarefas}), 500)\n  }  \n\n  addTarefa = (tarefa) => {\n    tarefa.id = this.getLastId()\n    const tarefas = [...this.state.tarefas, tarefa]\n    this.setState({tarefas})\n  }\n  \n  render() {\n\n    const  StyledDiv = styled.div`\n      color: #39a9dc;\n    `\n\n    return (\n      <div className=\"lista-tarefa-app container\">\n        <h1 className=\"center green-text\">Lista de Tarefas App</h1>\n        <AddTarefa addTarefa={this.addTarefa}/>\n        <StyledDiv className=\"center\">\n          {/* <small>Clique na tarefa para deletar</small> */}\n        </StyledDiv>\n        <Tarefas tarefas={this.state.tarefas} deleteTarefa={this.deleteTarefa}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}